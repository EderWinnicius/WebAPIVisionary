// <auto-generated />
using System;
using APIVisionary.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace APIVisionary.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20241102025304_AtualizandoPlaylistItem")]
    partial class AtualizandoPlaylistItem
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("APIVisionary.Models.ConteudoModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AutorId")
                        .HasColumnType("int");

                    b.Property<string>("DescricaoVideo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PlaylistVideosId")
                        .HasColumnType("int");

                    b.Property<DateTime>("PostDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("TituloVideo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AutorId");

                    b.HasIndex("PlaylistVideosId");

                    b.ToTable("ConteudoTableContent");

                    b.HasAnnotation("Relational:JsonPropertyName", "Meus vídeos");
                });

            modelBuilder.Entity("APIVisionary.Models.PlaylistItem", b =>
                {
                    b.Property<int>("ConteudoId")
                        .HasColumnType("int");

                    b.Property<int>("PlaylistId")
                        .HasColumnType("int");

                    b.Property<int?>("ConteudoModelId")
                        .HasColumnType("int");

                    b.Property<int?>("PlaylistVideosId")
                        .HasColumnType("int");

                    b.HasKey("ConteudoId", "PlaylistId");

                    b.HasIndex("ConteudoModelId");

                    b.HasIndex("PlaylistVideosId");

                    b.ToTable("PlaylistItemsTableContent");
                });

            modelBuilder.Entity("APIVisionary.Models.PlaylistVideos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatorId")
                        .HasColumnType("int");

                    b.Property<string>("PlaylistTittle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CreatorId");

                    b.ToTable("PlaylisTableContent");
                });

            modelBuilder.Entity("APIVisionary.Models.UsuariosModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataCriationAccount")
                        .HasColumnType("datetime2");

                    b.Property<string>("EmailUser")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameUser")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("NascDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("UsuariosTableContent");
                });

            modelBuilder.Entity("APIVisionary.Models.ConteudoModel", b =>
                {
                    b.HasOne("APIVisionary.Models.UsuariosModel", "Autor")
                        .WithMany("VideosPublicados")
                        .HasForeignKey("AutorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("APIVisionary.Models.PlaylistVideos", null)
                        .WithMany("VideosContidos")
                        .HasForeignKey("PlaylistVideosId");

                    b.Navigation("Autor");
                });

            modelBuilder.Entity("APIVisionary.Models.PlaylistItem", b =>
                {
                    b.HasOne("APIVisionary.Models.ConteudoModel", null)
                        .WithMany("PlaylistItems")
                        .HasForeignKey("ConteudoModelId");

                    b.HasOne("APIVisionary.Models.PlaylistVideos", null)
                        .WithMany("PlaylistItems")
                        .HasForeignKey("PlaylistVideosId");
                });

            modelBuilder.Entity("APIVisionary.Models.PlaylistVideos", b =>
                {
                    b.HasOne("APIVisionary.Models.UsuariosModel", "Creator")
                        .WithMany("PlaylistUser")
                        .HasForeignKey("CreatorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Creator");
                });

            modelBuilder.Entity("APIVisionary.Models.ConteudoModel", b =>
                {
                    b.Navigation("PlaylistItems");
                });

            modelBuilder.Entity("APIVisionary.Models.PlaylistVideos", b =>
                {
                    b.Navigation("PlaylistItems");

                    b.Navigation("VideosContidos");
                });

            modelBuilder.Entity("APIVisionary.Models.UsuariosModel", b =>
                {
                    b.Navigation("PlaylistUser");

                    b.Navigation("VideosPublicados");
                });
#pragma warning restore 612, 618
        }
    }
}
